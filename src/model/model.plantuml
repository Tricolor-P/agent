@startuml
class RoundGame {
  play()
}
abstract class Agent {
  selectable_comand_lists
  status
  slected_commnad_list
  select()
}
class RandomCommandAgent {
}
class AICommandAgent {
}
abstract class Observer {
 update()
}
abstract class Subject {
 observer_list
 register_observer()
 remove_observer()
 notify_observer()
}
abstract class Command {
  cmd
  run()
}
class NoCommand {
}
class MoveCommand {
}
class AimCommand {
}
abstract class SelectableCommandList {
 list
 dump()
 random_select()
}
class ExecuteCommandList{
 run()
 update()
 notify_observer()
}
class Status {
 img
 messages
 update()
 notify_observer()
}
class Window {
  capture()
}
class Parallel_Executor {
  dump()
}
abstract class DictRecord {
}
class RoundRecord {
  start_time
  frames
  update_status()
  update_execute_commnad()
  save()
}
class FrameRecord {
}
class ScreenRecord {
}
class MessageRecord {
}
class CommandRecord {
}
DictRecord <|-- RoundRecord
DictRecord <|-- FrameRecord
DictRecord <|-- ScreenRecord
DictRecord <|-- MessageRecord
DictRecord <|-- CommandRecord
RoundRecord --> FrameRecord
FrameRecord --> ScreenRecord
FrameRecord --> MessageRecord
FrameRecord --> CommandRecord

Observer <|-- RoundRecord
RoundGame --> ExecuteCommandList
RoundGame --> Status
RoundGame --> RoundRecord
Agent <|-- RandomCommandAgent
Agent <|-- AICommandAgent
Agent --> Status
Agent --> SelectableCommandList
SelectableCommandList <|-- MoveCommandList
SelectableCommandList <|-- AimCommnadList
SelectableCommandList <|-- ActionCommandList
SelectableCommandList --> Command
ExecuteCommandList --> Agent
Command <|-- NoCommand
Command <|-- MoveCommand
Command <|-- AimCommand
Subject <|-- Status
Subject <|-- ExecuteCommandList
Subject --> Observer
Status --> Window
Status --> Parallel_Executor
@enduml